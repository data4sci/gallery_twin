"""initial schema

Revision ID: d183fc068c61
Revises:
Create Date: 2025-08-23 20:29:26.308277

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "d183fc068c61"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exhibits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("text_md", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("audio_path", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "audio_transcript", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("order_index", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_exhibits_order_index"), "exhibits", ["order_index"], unique=False
    )
    op.create_index(op.f("ix_exhibits_slug"), "exhibits", ["slug"], unique=True)
    op.create_table(
        "sessions",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("user_agent", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("accept_lang", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_sessions_uuid"), "sessions", ["uuid"], unique=True)
    op.create_table(
        "events",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("exhibit_id", sa.Integer(), nullable=True),
        sa.Column(
            "event_type",
            sa.Enum(
                "VIEW_START", "VIEW_END", "AUDIO_PLAY", "AUDIO_PAUSE", name="eventtype"
            ),
            nullable=False,
        ),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("metadata_json", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exhibit_id"],
            ["exhibits.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "images",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("exhibit_id", sa.Integer(), nullable=False),
        sa.Column("path", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("alt_text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sort_order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["exhibit_id"],
            ["exhibits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("exhibit_id", sa.Integer(), nullable=True),
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("SINGLE", "MULTI", "LIKERT", "TEXT", name="questiontype"),
            nullable=False,
        ),
        sa.Column("options_json", sa.JSON(), nullable=True),
        sa.Column("required", sa.Boolean(), nullable=False),
        sa.Column("sort_order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["exhibit_id"],
            ["exhibits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "answers",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("value_text", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("value_json", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("answers")
    op.drop_table("questions")
    op.drop_table("images")
    op.drop_table("events")
    op.drop_index(op.f("ix_sessions_uuid"), table_name="sessions")
    op.drop_table("sessions")
    op.drop_index(op.f("ix_exhibits_slug"), table_name="exhibits")
    op.drop_index(op.f("ix_exhibits_order_index"), table_name="exhibits")
    op.drop_table("exhibits")
    # ### end Alembic commands ###
